messages_filepath: "./data/messages.csv"
categories_filepath: "./data/categories.csv"
database_filepath: "./data/DisasterResponse.db"
test_size: 0.2
random_seed: 42
model_filepath: "./models/classifier.pkl"
evaluation_filepath: "./models/evaluation_report.txt"
random_forest_parameters:
  # This section is passed to the random forest model
  # as a dictionary of parameters, thus names must match with
  # the sklearn API.
  # Whenever we have model or other object with many parameters
  # we should write config files for them.
  # That is easier than passing parameters in the code or via CLI
  # and we can guarantee compatibility in the code in case the model API changes
  # (i.e., we would simply change the config file).
  # NOTE: These default parameters can be overwritten
  # by the hyperparameter tuning 
  n_estimators: 100
  criterion: 'gini'
  max_depth: 13
  min_samples_split: 2
  min_samples_leaf: 1
  min_weight_fraction_leaf: 0.0
  max_features: 'sqrt'
  max_leaf_nodes: null
  min_impurity_decrease: 0.0
  bootstrap: true
  oob_score: false
  n_jobs: null
  random_state: 42
  verbose: 0
  warm_start: false
  class_weight: "balanced"
  ccp_alpha: 0.0
  max_samples: null
grid_search:
  hyperparameters:
    n_estimators:
      - 100
      - 200
    min_samples_split:
      - 2
      - 3
  cv: 3
#  scoring: 'f1'
categorical_columns:
  - "genre"
nlp_columns:
  - "message"
target_columns:
  - "related"
  - "request"
  - "offer"
  - "aid_related"
  - "medical_help"
  - "medical_products"
  - "search_and_rescue"
  - "security"
  - "military"
  - "child_alone"
  - "water"
  - "food"
  - "shelter"
  - "clothing"
  - "money"
  - "missing_people"
  - "refugees"
  - "death"
  - "other_aid"
  - "infrastructure_related"
  - "transport"
  - "buildings"
  - "electricity"
  - "tools"
  - "hospitals"
  - "shops"
  - "aid_centers"
  - "other_infrastructure"
  - "weather_related"
  - "floods"
  - "storm"
  - "fire"
  - "earthquake"
  - "cold"
  - "other_weather"
  - "direct_report"
